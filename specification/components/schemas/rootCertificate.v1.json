{
    "type": "object",
    "title": "RootCertificateV1",
    "description": "Object containing a root certificate registered in the Root Certificate Pool.\n\nFields marked with _informative_ are for information purpose only. Any certificate-based validations should refer to the certificates signed values instead of relying these fields.",
    "x-examples": {},
    "minProperties": 1,
    "maxProperties": 1,
    "properties": {
        "rootCertificateId": {
            "type": "string",
            "description": "The UUID of each root certificate is generated by thy system when the root certificate gets registered. It can be used to request an individual certificate using the REST API.",
            "format": "uuid",
            "example": "896b6655-180e-4304-b642-606bb00df8f0",
            "pattern": "^[0-9a-fA-F]{8}\\-([0-9a-fA-F]{4}\\-){3}[0-9a-fA-F]{12}$"
        },
        "distinguishedName": {
            "type": "string",
            "example": "DC=V2G, CN=V2G Root CA QA G1, O=V2G",
            "pattern": "^((CN|OU|O|C|DC|ST)=[^,]+,? ?)+$",
            "description": "Reflects the subjects distinguished name field. (informative)"
        },
        "rootCtlList": {
            "type": "array",
            "description" : "Present the list of the Certificate Trust List (CTL) that recognize the Root CA",
            "enum": [
                "European CTL",
                "American CTL",
                "No CTL"
            ]
        },
        "rootTypeList": {
            "type": "array",
            "description" : "Present the types linked to the Root CA, e.g. a unique Root certificate could be used as an OEM Root and a eMSP Root",
            "enum": [
                "eMSP",
                "V2G",
                "OEM",
                "PE"
            ]
        },
        "caCertificate": {
            "type": "string",
            "example": "MIICUzCCAfmgAwIBAgIQaasA0lm730LOgFKa0wzl7TAKBggqhkjOPQQDAjBVMQswCQYDVQQGEwJERTEVMBMGA1UEChMMSHViamVjdCBHbWJIMRMwEQYKCZImiZPyLGQBGRYDVjJHMRowGAYDVQQDExFWMkcgUm9vdCBDQSBRQSBHMTAgFw0xOTA0MjYwODM3MTVaGA8yMDU5MDQyNjA4MzcxNVowVTELMAkGA1UEBhMCREUxFTATBgNVBAoTDEh1YmplY3QgR21iSDETMBEGCgmSJomT8ixkARkWA1YyRzEaMBgGA1UEAxMRVjJHIFJvb3QgQ0EgUUEgRzEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAShT8kSNcC+74TND82On2Y2TOf8mYfxw73lKZ7t9cmEXHpMdAgsWBQ4LI+pOMhe6NOHzJbzP38kQTg4zLfw3kU0o4GoMIGlMBMGA1UdJQQMMAoGCCsGAQUFBwMJMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0OBAoECEtF/4Il/BCWMEUGA1UdIAQ+MDwwOgYMKwYBBAGCxDUBAgEAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3Lmh1YmplY3QuY29tL3BraS8wEwYDVR0jBAwwCoAIS0X/giX8EJYwDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMCA0gAMEUCIQCq3Qx2BLYVFb7Lt5XXpSlUViYv4cIUOQE1Ce9o2Jyy1QIgZRmVzMVjHZA+toiM000PCUrLppqbLpcRN4MP8kE0OhU=",
            "pattern": "^[-A-Za-z0-9+/]+={0,3}$",
            "description": "The root certificate in DER format encoded in Base64.",
            "maxLength": 800
        },
        "commonName": {
            "type": "string",
            "description": "Reflects the subjects common name value. (informative)",
            "example": "V2G Root CA QA G1"
        },
        "rootAuthorityKeyIdentifier": {
            "type": "string",
            "description": "SHA-1 hash of the certificates public key (informative)",
            "example": "S0X/giX8EJY="
        },
        "rootIssuerSerialNumber": {
            "type": "string",
            "description": "serial number in hex format of the certificate (informative)",
            "example": "69ab00d259bbdf42ce80529ad30ce5ed"
        },
        "validFrom": {
            "type": "string",
            "description": "Reflects the subjects not before date. (infotmative)",
            "format": "date-time",
            "example": "2017-12-07T14:08:30Z"
        },
        "validTo": {
            "type": "string",
            "description": "Reflects the subjects not after date. (infotmative)",
            "format": "date-time",
            "example": "2057-12-07T14:08:30Z"
        },
        "organizationName": {
            "type": "string",
            "description": "Reflects the subjects organization name value. (informative)",
            "example": "CharIN GmbH"
        },
        "certificateRevocationList": {
            "type": "string",
            "description": ""
        },
        "crossCertificatePair": {
            "type": "string"
        },
        "labeledUri": {
            "type": "string",
            "description": "RFC 2079 labeledURI"
        },
        "fingerprint": {
            "type": "string",
            "description": "SHA256 certificate fingerprint (informative)",
            "example": "4e05b8922d43923cdf20b202cdd0d849770b50038c39f104f506d7f1030ff809"
        }
    },
    "required": [
        "rootType",
        "caCertificate"
    ]
}
